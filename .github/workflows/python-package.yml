name: Python package
on:
  push:
    branches: [ master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '30 15 * * *'
jobs:
  build:
    runs-on:  ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.x]
        os:  [ubuntu-latest]
        architecture: [x64]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2.3.2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
    - name: Test python
      run: |
        python test.py
    - name: Upload Artifact
      uses: actions/upload-artifact@v2.3.1
      with:
        name: my-artifact
        path: text.txt
        retention-days: 5
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: text.txt
    - name: Docker Push VK Notify
      uses: andreyvrn/vk-message-action@v1
      env: 
          VK_PEER_ID: ${{ secrets.VK_PEER_ID }}
          VK_TOKEN: ${{ secrets.VK_TOKEN }} 
    - name: Result
      if: ${{ always() }}
      env:
          VK_PEER_ID: ${{ secrets.VK_PEER_ID }}
          VK_TOKEN: ${{ secrets.VK_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          event_name: ${{ github.event_name }}
          runner_os: ${{ runner.os }}
          repository_git: ${{ matrix.python-version }}
          job_status: ${{ job.status }}
          architecture: ${{ matrix.architecture }}
      run: |
        bash vk_notification.sh "$VK_PEER_ID" "$VK_TOKEN" "$event_name" "$runner_os" "$repository_git" "$job_status" "$architecture"
        bash telegram_notification.sh "$TELEGRAM_CHAT_ID" "$TELEGRAM_TOKEN" "$event_name" "$runner_os" "$repository_git" "$job_status" "$architecture"
